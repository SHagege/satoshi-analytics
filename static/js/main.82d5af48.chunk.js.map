{"version":3,"sources":["serviceWorker.js","Components/Addresses.jsx","Components/NavBar.jsx","Components/Home.jsx","Components/About.jsx","index.jsx"],"names":["Boolean","window","location","hostname","match","Addresses","state","richList","fetch","then","response","json","data","setState","catch","err","richListDisplay","this","map","e","className","href","address","balance","toLocaleString","React","Component","NavBar","id","to","Home","nonZeroAd","addressesCount","sats","handleChange","bind","event","persist","apiRequest","concat","target","value","type","placeholder","onChange","parseInt","About","ReactDOM","render","exact","path","document","getElementById"],"mappings":"wOAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+CChBeC,E,YACjB,aAAe,IAAD,8BACV,+CACKC,MAAQ,CACTC,SAAU,IAHJ,E,iFAOO,IAAD,OAEhBC,MADiB,gDAEZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVN,SAAUK,EAAKA,UAEpBE,OAAM,SAAAC,GAAG,OAAIA,O,+BAKpB,IAAMC,EAAkBC,KAAKX,MAAMC,SAASW,KAAI,SAACC,GAAD,OAC5C,yBAAKC,UAAU,iBACX,6BACI,uBAAGC,KAAM,0CAA4CF,EAAEG,SAAUH,EAAEG,UAEvE,6BACKH,EAAEI,QAAQC,iBADf,aAIR,OACI,yBAAKJ,UAAU,sBACX,wBAAIA,UAAU,SAAd,aACA,yBAAKA,UAAU,8BAA8BJ,Q,GAjCtBS,IAAMC,W,QCCxBC,E,iLAEb,OACI,yBAAKC,GAAG,kBAAkBR,UAAU,eAChC,yBAAKA,UAAU,cACX,uBAAGA,UAAU,eACT,kBAAC,IAAD,CAAMS,GAAG,KAAT,SAEJ,uBAAGT,UAAU,eACT,kBAAC,IAAD,CAAMS,GAAG,UAAT,gB,GATYJ,IAAMC,WCCrBI,E,YACjB,aAAe,IAAD,8BACV,+CACKxB,MAAQ,CACTyB,UAAW,EACXC,eAAgB,EAChBC,KAAM,GAGV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBARV,E,0EAWDC,GAAQ,IAAD,OAChBA,EAAMC,UACN,IAAIC,EAAa,oEACZC,OAAOH,EAAMI,OAAOC,MAAO,OAC5BL,EAAMI,OAAOC,MAAQ,GACrBjC,MAAM8B,GACD7B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVmB,eAAgBpB,EAAKA,KAAK,GAAG,WAC7BqB,KAAMG,EAAMI,OAAOC,a,0CAMlB,IAAD,OAEhBjC,MADiB,0DAEZC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKC,SAAS,CACVkB,UAAWnB,EAAKA,KAAK,GAAG,kB,+BAMpC,OACI,6BACI,kBAAC,EAAD,MACA,yBAAKQ,UAAU,qCACX,wBAAIA,UAAU,cAAcH,KAAKX,MAAMyB,UAAUP,iBAAjD,uCAEJ,2BAAOJ,UAAU,8BAA8BsB,KAAK,OAAOC,YAAY,uBAAuBC,SAAU3B,KAAKiB,eAC7G,yBAAKd,UAAU,aACX,yBAAKA,UAAU,+BACVH,KAAKX,MAAM2B,KACR,wBAAIb,UAAU,SACTH,KAAKX,MAAM0B,eAAeR,iBAD/B,6BAC2EqB,SAAS5B,KAAKX,MAAM2B,MAAMT,iBADrG,aAEQ,KAEZ,kBAAC,EAAD,a,GAtDUC,IAAMC,WCoBzBoB,E,iLAnBP,OACI,6BACI,kBAAC,EAAD,MACA,yBAAK1B,UAAU,aACX,4BACI,qCAEJ,4BACI,0FAA+D,6BAAM,6BAArE,cACe,uBAAGC,KAAK,uEAAR,qBADf,MAEI,uBAAGA,KAAK,wBAAR,YAFJ,mBAE+D,uBAAGA,KAAK,gDAAR,UAF/D,gBADJ,IAIuB,uBAAGA,KAAK,mCAAR,gBAJvB,W,GATAI,IAAMC,W,QCoB1BqB,IAASC,OAAO,kBAAC,IAAD,KAAe,mBAb/B,WACI,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UACd,kBAAC,EAAD,UAMe,OAAyBC,SAASC,eAAe,W","file":"static/js/main.82d5af48.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\n\nexport default class Addresses extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            richList: []\n        }\n    }\n\n    componentDidMount() {\n        let apiRequest = \"https://api.blockchair.com/bitcoin/addresses\"\n        fetch(apiRequest)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    richList: data.data\n                })\n            }).catch(err => err)\n\n    }\n\n    render() {\n        const richListDisplay = this.state.richList.map((e) =>\n            <div className=\"row-rich-list\">\n                <div>\n                    <a href={\"https://blockchair.com/bitcoin/address/\" + e.address}>{e.address}</a>\n                </div>\n                <div>\n                    {e.balance.toLocaleString()} Sats\n                </div>\n            </div>)\n        return (\n            <div className=\"richlist-container\">\n                <h1 className=\"title\">Rich List</h1>\n                <div className=\"richlist-address-container\">{richListDisplay}</div>\n            </div >\n        )\n    }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default class NavBar extends React.Component {\n    render() {\n        return (\n            <div id=\"navbarMenuHeroC\" className=\"NavBarItems\">\n                <div className=\"navbar-end\">\n                    <a className=\"navbar-item\">\n                        <Link to=\"/\">Home</Link>\n                    </a>\n                    <a className=\"navbar-item\">\n                        <Link to=\"/about\">About</Link>\n                    </a>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Addresses from \"./Addresses.jsx\";\nimport NavBar from './NavBar.jsx';\n\nexport default class Home extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            nonZeroAd: 0,\n            addressesCount: 0,\n            sats: 0,\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event) {\n        event.persist()\n        let apiRequest = \"https://api.blockchair.com/bitcoin/addresses?a=count()&q=balance(\"\n            .concat(event.target.value, \"..)\")\n        if (event.target.value > 0) {\n            fetch(apiRequest)\n                .then(response => response.json())\n                .then(data => {\n                    this.setState({\n                        addressesCount: data.data[0]['count()'],\n                        sats: event.target.value\n                    })\n                })\n        }\n    }\n\n    componentDidMount() {\n        let apiRequest = \"https://api.blockchair.com/bitcoin/addresses?a=count()\"\n        fetch(apiRequest)\n            .then(response => response.json())\n            .then(data => {\n                this.setState({\n                    nonZeroAd: data.data[0]['count()']\n                })\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <div className=\"has-text-centered title-container\">\n                    <h1 className=\"title is-1\">{this.state.nonZeroAd.toLocaleString()} addresses have a non-zero balance</h1>\n                </div>\n                <input className=\"input is-rounded searchSats\" type=\"text\" placeholder=\"Enter Satoshi amount\" onChange={this.handleChange} />\n                <div className=\"hero-body\">\n                    <div className=\"container has-text-centered\">\n                        {this.state.sats ?\n                            <h1 className=\"title\">\n                                {this.state.addressesCount.toLocaleString()} addresses have more than {parseInt(this.state.sats).toLocaleString()} Satoshis\n                            </h1> : null\n                        }\n                        <Addresses />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport NavBar from './NavBar'\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <div className=\"aboutPage\">\n                    <h1 >\n                        <b>About</b>\n                    </h1>\n                    <h2>\n                        <b>Satoshi Analytics is a statistics website focused on Bitcoin<br /><br />\n                            Built with <a href=\"https://github.com/Blockchair/Blockchair.Support/blob/master/API.md\">Blockchair's API </a>and\n                            <a href=\"https://reactjs.org/\"> ReactJS</a>. Opensource on <a href=\"https://github.com/SHagege/satoshi-analytics\">GitHub</a>.\n                            Created by</b> <a href=\"https://twitter.com/solalhagege\">@solalhagege</a>.\n                    </h2>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Components/Home.jsx';\nimport NavBar from './Components/NavBar.jsx';\nimport About from './Components/About.jsx';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n    return (\n        <Switch>\n            <Route exact path=\"/\">\n                <Home />\n            </Route>\n            <Route exact path=\"/about\">\n                <About />\n            </Route>\n        </Switch>\n    )\n}\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));"],"sourceRoot":""}